services:
  mongo:
    container_name: mongo_randovango
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./storage/mongodb:/data/db
    networks:
      - randovango
  db_randovango:
    image: mysql
    container_name: db_randovango
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PSWD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PSWD}
    ports:
      - "3306:3306"
    volumes:
      - ./storage/mysql:/var/lib/mysql
    restart: always
    networks:
      - randovango
  
  adminer:
    image: adminer
    container_name: adminer_randovango
    restart: always
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      - randovango

  backend:
    container_name: fastapi_backend
    build:
      context: .
      dockerfile: Dockerfile.backend
    volumes:
      - ./backend:/usr/src/app
      - ./.env:/usr/src/.env
      - ./data:/usr/src/data
      - ./storage:/usr/src/storage
      - ./logs:/usr/src/logs
    ports:
      - "8000:8000"
    networks:
      - randovango
    depends_on:
      mongo:
        condition: service_started
      db_randovango:
        condition: service_started

  frontend:
    container_name: flask_frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - ./frontend:/usr/src/app
      - ./.env:/usr/src/app/.env
    ports:
      - "5000:5000"
    networks:
      - randovango
    depends_on:
      - backend

networks:
  randovango:
    driver: bridge